#include <stdio.h>
#include <stdlib.h>
#include <pgtypes_numeric.h>

EXEC SQL WHENEVER SQLWARNING SQLPRINT; 
EXEC SQL WHENEVER SQLERROR SQLPRINT;

int main() {
  EXEC SQL BEGIN DECLARE SECTION;
    const char *pword = getenv("POSTGRES_PASSWORD");
    const char *user = "jon";
    const int filter = 4;
    const char *dbname = "unix:postgresql://localhost:5433/ecpg_demo";
    long long int count;
    numeric *gas_gen;
    int *gas_gen_ind;
  EXEC SQL END DECLARE SECTION;  

  if (pword == NULL) {
    fprintf(stderr, "Env var not found\n");
    exit(1);
  }

  EXEC SQL CONNECT TO :dbname USER :user USING :pword;
  printf("SQL connection executed\n");
  EXEC SQL SELECT count(*) INTO :count
  FROM electricity_market
  WHERE weekday = :filter;
  printf("Total number of rows in electricity_market: %d\n", count);
  
  gas_gen = PGTYPESnumeric_new();

  // use cursors for iterating over a result set
  EXEC SQL DECLARE cur CURSOR FOR
    SELECT miso_gas_gen FROM electricity_market
    ORDER BY miso_gas_gen;
  EXEC SQL OPEN cur;
  EXEC SQL FETCH NEXT FROM cur INTO :gas_gen INDICATOR :gas_gen_ind;  
  EXEC SQL CLOSE cur;

  // potentially NULL values need to be associated with INDICATORS
  // else you can run into a SQL ERROR if the value is NULL 
  if (*gas_gen_ind < 0)
    printf("miso_gas_gen was NULL\n");
  else
    printf("miso_gas_gen is %s\n", PGTYPESnumeric_to_asc(gas_gen, -1));

  EXEC SQL DISCONNECT ALL;
  printf("SQL connection exited\n");
  return 0;
}